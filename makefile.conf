# Selecting Core
CORTEX_M=23

# Use newlib-nano. To disable it, specify USE_NANO=
USE_NANO=--specs=nano.specs

# Use seimhosting or not
USE_SEMIHOST=--specs=rdimon.specs
USE_NOHOST=--specs=nosys.specs

CORE=CM$(CORTEX_M)
BASE=../M251BSP
DEVICE=M251

# Compiler & Linker
CC=arm-none-eabi-gcc
CXX=arm-none-eabi-g++

# Binary
CP=arm-none-eabi-objcopy

# Options for specific architecture
#ARCH_FLAGS=-mthumb -mcpu=cortex-m$(CORTEX_M) -mfloat-abi=hard -D __FPU_PRESENT -mfpu=fpv4-sp-d16
ARCH_FLAGS=-mthumb -mcpu=cortex-m$(CORTEX_M) 
#ARCH_FLAGS=-mthumb  -mtune=cortex-m23

# Startup code
STARTUP=$(BASE)/Library/Device/Nuvoton/$(DEVICE)/Source/GCC/startup_$(DEVICE).S

# -Os -flto -ffunction-sections -fdata-sections to compile for code size
CFLAGS=$(ARCH_FLAGS) $(STARTUP_DEFS) -Os -flto -ffunction-sections -fdata-sections
CXXFLAGS=$(CFLAGS)

# Link for code size
GC=-Wl,--gc-sections

# Create map file
MAP=-Wl,-Map=$(NAME).map

STARTUP_DEFS=-D__STARTUP_CLEAR_BSS -D__START=main
# Need following option for LTO as LTO will treat retarget functions as
# unused without following option
CFLAGS += -fno-builtin
# ARMv8M Baseline target (Cortex-M23 core).
CFLAGS += -D ARM_MATH_ARMV8MBL

LDSCRIPTS=-Llib -L$(BASE)/Library/Device/Nuvoton/$(DEVICE)/Source/GCC -T gcc_arm.ld

LFLAGS=$(USE_NANO) $(USE_NOHOST) $(LDSCRIPTS) $(GC) 